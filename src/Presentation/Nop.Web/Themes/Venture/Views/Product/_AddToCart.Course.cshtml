@model ProductDetailsModel.AddToCartModel
@using Nop.Core.Domain.Orders;
@if (Model.UpdatedShoppingCartItemId > 0)
{
    <input asp-for="UpdatedShoppingCartItemId" type="hidden" />
}
@if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
{
    if (!Model.DisableBuyButton)
    {
        var addToCartText = "";
        if (Model.UpdatedShoppingCartItemId > 0 && Model.UpdateShoppingCartItemType.HasValue && Model.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
        {
            addToCartText = T("ShoppingCart.AddToCart.Update").Text;
        }
        else
        {
            addToCartText = T("ShoppingCart.AddToCart").Text;
            if (Model.IsRental)
            {
                addToCartText = T("ShoppingCart.Rent").Text;
            }
            if (Model.AvailableForPreOrder)
            {
                addToCartText = T("ShoppingCart.PreOrder").Text;
            }
        }
        <button type="button" id="add-to-cart-button-@Model.ProductId" class="button-1 add-to-cart-button" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new {productId = Model.ProductId, shoppingCartTypeId = (int) ShoppingCartType.ShoppingCart})', '#product-details-form');return false;">@addToCartText</button>
        
    }
    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductDetailsAddInfo, additionalData = Model })
}