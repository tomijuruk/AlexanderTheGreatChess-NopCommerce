@using Nop.Core
@using Nop.Core.Infrastructure
@using Nop.Services.Configuration
@using Nop.Services.Localization
@using Microsoft.AspNetCore.WebUtilities

@inject ILocalizationService localizationService
@inject ISettingService settingService
@inject IStoreContext storeContext

@{
    Layout = "_ColumnsOne";

    var homepageTitle = await localizationService.GetLocalizedAsync(await storeContext.GetCurrentStoreAsync(), s => s.HomepageTitle);

    //title
    if (!string.IsNullOrEmpty(homepageTitle))
    {
        NopHtml.AddTitleParts(homepageTitle);
    }

    var homepageDescription = await localizationService.GetLocalizedAsync(await storeContext.GetCurrentStoreAsync(), s => s.HomepageDescription);

    //meta
    if (!string.IsNullOrEmpty(homepageDescription))
    {
        NopHtml.AddMetaDescriptionParts(homepageDescription);
    }

    //page class
    NopHtml.AppendPageCssClassParts("html-home-page");

    var storeId = (await storeContext.GetCurrentStoreAsync()).Id;
    var homePageProductBoxLayout = await settingService.GetSettingByKeyAsync("venturethemesettings.homepageitemboxlayout", "layout-1", storeId, true);
    var homePageProductBoxLayoutClass = "product-box-" + homePageProductBoxLayout;

    var homePageFeaturedVideoLink = await settingService.GetSettingByKeyAsync("venturethemesettings.homepagefeaturedvideolink", string.Empty, storeId, true);

    var videoIframe = string.Empty;

    if(!string.IsNullOrEmpty(homePageFeaturedVideoLink))
    {
        var uri = new Uri(homePageFeaturedVideoLink);
        var query = QueryHelpers.ParseQuery(uri.Query);
        var videoId = query["v"];

        videoIframe = string.Format("<iframe src='https://www.youtube.com/embed/{0}?rel=0' frameborder='0' allowfullscreen></iframe>", videoId);
    }
}
<div class="page home-page @homePageProductBoxLayoutClass">
    <div class="page-body">
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HomepageTop })
        @await Component.InvokeAsync("Widget", new { widgetZone = "venture_home_page_info_boxes" })
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HomepageBeforeCategories })
        @await Component.InvokeAsync(typeof(HomepageCategoriesViewComponent))
        @await Component.InvokeAsync(typeof(TopicBlockViewComponent), new { systemName = "HomepageText" })
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HomepageBeforeProducts })
        @await Component.InvokeAsync(typeof(HomepageProductsViewComponent))
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HomepageBeforeBestSellers })
        @await Component.InvokeAsync(typeof(HomepageBestSellersViewComponent))
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HomepageBeforeNews })
        @await Component.InvokeAsync(typeof(HomepageNewsViewComponent))
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HomepageBeforePoll })
        @await Component.InvokeAsync(typeof(HomepagePollsViewComponent))
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HomepageBottom })
        <div class="home-page-bottom-wrapper">
            @{
                var carouselWidgetZone = await Component.InvokeAsync("Widget", new { widgetZone = "venture_home_page_bottom" });
            }
            @if (!String.IsNullOrEmpty(await carouselWidgetZone.RenderHtmlContentAsync()))
            {
                <div class="carousel-wrapper">
                    @carouselWidgetZone
                </div>
            }
            @if (!string.IsNullOrEmpty(videoIframe))
            {
                <div class="home-page-featured-video-wrapper">
                    <div class="home-page-video-title title">
                        <strong>@T("SevenSpikes.Themes.Venture.Common.HomePageVideoTitle")</strong>
                    </div>
                    <div class="home-page-featured-video">@Html.Raw(videoIframe)</div>
                </div>
            }
        </div>
    </div>
</div>
