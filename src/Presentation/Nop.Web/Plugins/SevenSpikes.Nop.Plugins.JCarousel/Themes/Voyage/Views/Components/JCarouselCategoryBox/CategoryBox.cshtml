@model CategoryModel.SubCategoryModel
@inject IViewComponentSelector viewComponentSelector

@{
    string controllerName = Url.ActionContext.RouteData.Values["controller"].ToString();
    string actionName = Url.ActionContext.RouteData.Values["action"].ToString();
    var isHomePage = controllerName.Equals("home", StringComparison.InvariantCultureIgnoreCase) &&
                     actionName.Equals("index", StringComparison.InvariantCultureIgnoreCase);

    var categoryItemClass = string.Empty;
    if (isHomePage)
    {
        categoryItemClass = "category-item";
    }
    else
    {
        categoryItemClass = "sub-category-item";
    }
}

@if (isHomePage)
{
    <div class="@categoryItemClass">
        <div class="wrapper picture-wrapper">
            <div class="picture">
                <a href="@Url.RouteUrl("Category", new { SeName = Model.SeName })" title="@Model.PictureModel.Title">
                    @if (viewComponentSelector.SelectComponent("LazyLoadImage") != null)
                    {
                        @await Component.InvokeAsync("LazyLoadImage", new (string Key, string Value)[]
                        {
                            ("src", Model.PictureModel.ImageUrl),
                            ("alt", Model.PictureModel.AlternateText),
                            ("title", Model.PictureModel.Title)
                        })
                    }
                    else
                    {
                        <img alt="@Model.PictureModel.AlternateText" src="@Model.PictureModel.ImageUrl" title="@Model.PictureModel.Title" />
                    }
                </a>
            </div>
            @await Component.InvokeAsync("Widget", new { widgetZone = "voyage_homepage_subcategories", additionalData = Model.Id })
        </div>
        <div class="wrapper text-wrapper">
            <h2 class="category-title">
                <a href="@Url.RouteUrl("Category", new { SeName = Model.SeName })" title="@Model.PictureModel.Title">
                    @Model.Name
                </a>
            </h2>
            <a class="view-all" href="@Url.RouteUrl("Category", new { SeName = Model.SeName })"><span>@T("SevenSpikes.Themes.Voyage.ViewAll")</span></a>
        </div>
    </div>
}
else
{
    <div class="@categoryItemClass">
        <h2 class="title">
            <a href="@Url.RouteUrl("Category", new { SeName = Model.SeName })" title="@Model.PictureModel.Title">
                @Model.Name
            </a>
        </h2>
        <div class="picture">
            <a href="@Url.RouteUrl("Category", new { SeName = Model.SeName })" title="@Model.PictureModel.Title">
                @if (viewComponentSelector.SelectComponent("LazyLoadImage") != null)
                {
                    @await Component.InvokeAsync("LazyLoadImage", new (string Key, string Value)[]
                    {
                        ("src", Model.PictureModel.ImageUrl),
                        ("alt", Model.PictureModel.AlternateText),
                        ("title", Model.PictureModel.Title)
                    })
                }
                else
                {
                    <img alt="@Model.PictureModel.AlternateText" src="@Model.PictureModel.ImageUrl" title="@Model.PictureModel.Title" />
                }
            </a>
        </div>
    </div>
}