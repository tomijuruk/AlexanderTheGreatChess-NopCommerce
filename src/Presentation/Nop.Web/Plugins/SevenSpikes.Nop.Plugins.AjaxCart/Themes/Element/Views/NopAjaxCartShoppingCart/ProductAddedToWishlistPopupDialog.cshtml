@** Copyright 2019 Seven Spikes Ltd. All rights reserved. (http://www.nop-templates.com)
    * http://www.nop-templates.com/t/licensinginfo
*@

@model SevenSpikes.Nop.Plugins.AjaxCart.Models.ProductAddedToWishlistPopupDialogModel

@{
    var shoppingCartItemModel = Model.WishlistShoppingCartItemModel;
}

<div class="productAddedToCartWindow">
    <div class="productAddedToCartWindowTitle">
        @T("SevenSpikes.NopAjaxCart.WishlistNotificationBoxTitle")
    </div>
    <div class="productAddedToCartItem">
        <div class="productAddedToCartWindowImage">
            <a href="@(Url.RouteUrl<Product>( new { SeName = shoppingCartItemModel.ProductSeName }))" title="@shoppingCartItemModel.Picture.Title">
                <img alt="@shoppingCartItemModel.Picture.AlternateText" src="@shoppingCartItemModel.Picture.ImageUrl" title="@shoppingCartItemModel.Picture.Title" />
            </a>
        </div>
        <div class="productAddedToCartWindowDescription">
            <h1>
                <a href="@(Url.RouteUrl<Product>( new { SeName = shoppingCartItemModel.ProductSeName }))">@shoppingCartItemModel.ProductName</a>
            </h1>
            <strong class="price">@shoppingCartItemModel.UnitPrice @T("SevenSpikes.NopAjaxCart.PerUnit")</strong>
            <div class="attributeInfo">@Html.Raw(shoppingCartItemModel.AttributeInfo)</div>
            <span class="quantity">@T("SevenSpikes.NopAjaxCart.ShoppingCartNotificationBoxQuantity") : @shoppingCartItemModel.Quantity</span>
        </div>
    </div>
    <div class="productAddedToCartWindowSummary">
        <a class="continueShoppingLink" href="#"><span>@T("SevenSpikes.NopAjaxCart.ShoppingCartNotificationBoxContinueShopping")</span></a>
        <button type="submit" class="button-1 add-to-wishlist-button productAddedToCartWindowCheckout" onclick="setLocation('@Url.RouteUrl("Wishlist")');"><span>@T("Wishlist")</span></button>
    </div>
    @if (Model.EnableRelatedProductsInPopup)
    {
        @await Component.InvokeAsync("NopAjaxCartPopupRelatedProducts", new { productId = shoppingCartItemModel.ProductId });
    }

    @if (Model.EnableCrossSellProductsInPopup)
    {
        @await Component.InvokeAsync("NopAjaxCartPopupCrossSellProducts", new { productId = shoppingCartItemModel.ProductId });
    }
</div>